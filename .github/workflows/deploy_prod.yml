name: Build and Deploy to Production

on:
  push:
    tags:
      - "v*.*.*"

env:
  # prod creds
  PROD_HOST: ${{ secrets.PROD_HOST }}
  PROD_PORT: ${{ secrets.PROD_PORT }}
  PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
  PROD_SSH_KEY: ${{ secrets.PROD_SSH_KEY }}
  SITE_DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKER_LOGIN: simple2b
  PROJECT_IMAGE: simple2b/tenkabel

jobs:
  on-main-branch-check:
    runs-on: Linux
    outputs:
      on_main: ${{ steps.contains_tag.outputs.retval }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rickstaa/action-contains-tag@v1
        id: contains_tag
        with:
          reference: "main"
          tag: "${{ github.ref }}"

  test:
    runs-on: Linux
    needs: on-main-branch-check
    if: ${{ needs.on-main-branch-check.outputs.on_main == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.5.0
      - name: Run pytest
        run: poetry run pytest

  build:
    runs-on: Linux
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker meta
        id: project_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.PROJECT_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ env.SITE_DOCKER_ACCESS_TOKEN }}
      - name: Build and Push TenKabel image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.project_meta.outputs.tags }}
          labels: ${{ steps.project_meta.outputs.labels }}

  deploy_prod:
    name: Deploy to production
    needs:
      - on-main-branch-check
      - test
      - build
    runs-on: Linux
    steps:
      - uses: actions/checkout@v3
      - name: update compose file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.PROD_HOST }}
          username: ${{ env.PROD_USERNAME }}
          port: ${{env.PROD_PORT}}
          key: ${{ env.PROD_SSH_KEY }}
          source: docker-compose.prod.yaml
          target: /home/runner/tenkabel
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.PROD_HOST }}
          username: ${{ env.PROD_USERNAME }}
          port: ${{env.PROD_PORT}}
          key: ${{ env.PROD_SSH_KEY }}
          script: |
            cd /home/runner/tenkabel &&
            mv docker-compose.prod.yaml docker-compose.yaml &&
            docker compose pull &&
            docker compose up -d &&
            docker system prune -f
