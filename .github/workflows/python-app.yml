name: Ten Kabel CI/CD

on:
  push:
    branches: [main, develop, auto-build]
  pull_request:
    branches: [develop, auto-build]

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: [1.4.1]
        os: [Linux]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run pytest
        run: |
          poetry run pytest
  build:
    needs: tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/auto-build'
    runs-on: "Linux"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tag
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "TAG=prod" >> "$GITHUB_ENV"
          else
              echo "TAG=latest" >> "$GITHUB_ENV"
          fi

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: simple2b/tenkabel:${{ env.TAG }}
  # deploy:
  #   needs: build
  #   runs-on: "Linux "
  #   steps:
  #     - name: Deploy to runner
  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         script: |
  #           cd ten_kabel
  #           ./deploy_script.sh
