"""empty message

Revision ID: fd1a294589ff
Revises: 
Create Date: 2023-05-24 17:47:32.212420

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "fd1a294589ff"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("name_en", sa.String(length=64), nullable=False),
        sa.Column("name_hebrew", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_locations")),
    )
    op.create_table(
        "professions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("name_en", sa.String(length=64), nullable=False),
        sa.Column("name_hebrew", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_professions")),
    )
    op.create_table(
        "superusers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("email", sa.String(length=128), nullable=True),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("google_openid_key", sa.String(length=64), nullable=True),
        sa.Column("picture", sa.String(length=128), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_superusers")),
        sa.UniqueConstraint("email", name=op.f("uq_superusers_email")),
        sa.UniqueConstraint("username", name=op.f("uq_superusers_username")),
    )
    op.create_table(
        "users",
        sa.Column("phone", sa.String(length=128), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("email", sa.String(length=128), nullable=True),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("google_openid_key", sa.String(length=64), nullable=True),
        sa.Column("picture", sa.String(length=128), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        sa.UniqueConstraint("phone", name=op.f("uq_users_phone")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("worker_id", sa.Integer(), nullable=True),
        sa.Column("profession_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "LATE", "STARTED", "COMPLETED", "FULFILLED", name="status"
            ),
            nullable=False,
        ),
        sa.Column("who_pays", sa.Enum("ME", "CLIENT", name="who_pays"), nullable=False),
        sa.Column("customer_first_name", sa.String(length=64), nullable=False),
        sa.Column("customer_last_name", sa.String(length=64), nullable=False),
        sa.Column("customer_phone", sa.String(length=64), nullable=False),
        sa.Column("customer_street_address", sa.String(length=128), nullable=False),
        sa.Column("payment", sa.Integer(), nullable=False),
        sa.Column("commission", sa.Float(), nullable=False),
        sa.Column("city", sa.String(length=64), nullable=False),
        sa.Column("time", sa.String(length=64), nullable=False),
        sa.Column(
            "payment_status",
            sa.Enum("PAID", "UNPAID", name="paymentstatus"),
            nullable=False,
        ),
        sa.Column(
            "commission_status",
            sa.Enum("PAID", "UNPAID", name="commissionstatus"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], name=op.f("fk_jobs_owner_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["professions.id"],
            name=op.f("fk_jobs_profession_id_professions"),
        ),
        sa.ForeignKeyConstraint(
            ["worker_id"], ["users.id"], name=op.f("fk_jobs_worker_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_jobs")),
    )
    op.create_table(
        "users_professions",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["professions.id"],
            name=op.f("fk_users_professions_profession_id_professions"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_users_professions_user_id_users")
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "profession_id", name=op.f("pk_users_professions")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_professions")
    op.drop_table("jobs")
    op.drop_table("users")
    op.drop_table("superusers")
    op.drop_table("professions")
    op.drop_table("locations")
    # ### end Alembic commands ###
