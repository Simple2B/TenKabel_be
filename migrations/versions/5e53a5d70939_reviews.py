"""reviews

Revision ID: 5e53a5d70939
Revises: c1f628cd12fb
Create Date: 2023-10-04 15:40:30.935275

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5e53a5d70939"
down_revision = "c1f628cd12fb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # drp[ ratestatus enum:
    op.execute("ALTER TYPE ratestatus RENAME TO ratestatus_old")
    op.execute("CREATE TYPE ratestatus AS ENUM ('POSITIVE', 'NEGATIVE', 'NEUTRAL')")
    op.execute(
        "ALTER TABLE rate ALTER COLUMN rate TYPE ratestatus USING rate::text::ratestatus"
    )
    op.execute("DROP TYPE ratestatus_old")

    rate_status = sa.dialects.postgresql.ENUM(
        "POSITIVE",
        "NEGATIVE",
        "NEUTRAL",
        name="ratestatus",
        create_type=False,
    )

    op.create_table(
        "tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "rate",
            rate_status,
            nullable=False,
        ),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["professions.id"],
            name=op.f("fk_tags_profession_id_professions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tags")),
    )
    op.create_index(op.f("ix_tags_uuid"), "tags", ["uuid"], unique=True)
    op.create_table(
        "reviews",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("evaluated_id", sa.Integer(), nullable=False),
        sa.Column("evaluates_id", sa.Integer(), nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column(
            "rate",
            rate_status,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluated_id"], ["users.id"], name=op.f("fk_reviews_evaluated_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["evaluates_id"], ["users.id"], name=op.f("fk_reviews_evaluates_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["job_id"], ["jobs.id"], name=op.f("fk_reviews_job_id_jobs")
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tags.id"], name=op.f("fk_reviews_tag_id_tags")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reviews")),
        sa.UniqueConstraint("uuid", name=op.f("uq_reviews_uuid")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("reviews")
    op.drop_index(op.f("ix_tags_uuid"), table_name="tags")
    op.drop_table("tags")
    # ### end Alembic commands ###
